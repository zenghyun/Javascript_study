(function(){"use strict";var __webpack_modules__={441:function(){eval("\n;// CONCATENATED MODULE: ./src/UI/Modal.js\nclass Modal {\n  constructor(contentId, fallbackText) {\n    this.fallbackText = fallbackText;\n    this.contentTemplateEl = document.getElementById(contentId);\n    this.modalTemplateEl = document.getElementById('modal-template');\n  }\n  show() {\n    if ('content' in document.createElement('template')) {\n      // 'content' in document.createElement('template') => template가 사용 가능한지 확인 \n      const modalElements = document.importNode(this.modalTemplateEl.content, true);\n      this.modalElement = modalElements.querySelector('.modal');\n      this.backdropElement = modalElements.querySelector('.backdrop');\n      const contentElement = document.importNode(this.contentTemplateEl.content, true);\n      this.modalElement.appendChild(contentElement);\n      document.body.insertAdjacentElement('afterbegin', this.modalElement);\n      document.body.insertAdjacentElement('afterbegin', this.backdropElement);\n    } else {\n      // fallback code\n      alert(this.fallbackText);\n    }\n  }\n  hide() {\n    if (this.modalElement) {\n      document.body.removeChild(this.modalElement);\n      document.body.removeChild(this.backdropElement);\n      this.modalElement = null;\n      this.backdropElement = null;\n    }\n  }\n}\n;// CONCATENATED MODULE: ./src/UI/Map.js\nclass Map {\n  constructor(coords) {\n    this.render(coords);\n  }\n  render(coordinates) {\n    if (!google) {\n      alert('Could not load maps library - please try again later!');\n      return;\n    }\n    const map = new google.maps.Map(document.getElementById('map'), {\n      center: coordinates,\n      zoom: 16\n    });\n    new google.maps.Marker({\n      position: coordinates,\n      map: map\n    });\n  }\n}\n;// CONCATENATED MODULE: ./src/Utility/Location.js\nconst GOOGLE_API_KEY = '';\nasync function getAddressFromCoords(coords) {\n  const response = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${coords.lat},${coords.lng}&key=${GOOGLE_API_KEY}`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch address. Please try again!');\n  }\n  const data = await response.json();\n  if (data.error_message) {\n    throw new Error(data.error_message);\n  }\n  const address = data.results[0].formatted_address;\n  return address;\n}\nasync function getCoordsFromAddress(address) {\n  const urlAddress = encodeURI(address);\n  const response = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${urlAddress}&key=${GOOGLE_API_KEY}`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch coordinates. Please try again!');\n  }\n  const data = await response.json();\n  if (data.error_message) {\n    throw new Error(data.error_message);\n  }\n  const coordinates = data.results[0].geometry.location;\n  return coordinates;\n}\n;// CONCATENATED MODULE: ./src/SharePlace.js\n\n\n\nclass PlaceFinder {\n  constructor() {\n    const addressForm = document.querySelector(\"form\");\n    const locateUserBtn = document.getElementById(\"locate-btn\");\n    this.shareBtn = document.getElementById('share-btn');\n    locateUserBtn.addEventListener(\"click\", this.locateUserHandler.bind(this));\n    this.shareBtn.addEventListener('click', this.sharePlaceHandler);\n    addressForm.addEventListener(\"submit\", this.findAddressHandler.bind(this));\n  }\n  sharePlaceHandler() {\n    const sharedLinkInputElement = document.getElementById('share-link');\n    if (!navigator.clipboard) {\n      sharedLinkInputElement.select();\n      return;\n    }\n    navigator.clipboard.writeText(sharedLinkInputElement.value).then(() => {\n      alert('Copied into clipboard!');\n    }).catch(err => {\n      console.log(err);\n      sharedLinkInputElement.select();\n    });\n  }\n  selectPlace(coordinates, address) {\n    if (this.map) {\n      this.map.render(coordinates);\n    } else {\n      this.map = new Map(coordinates);\n    }\n    this.shareBtn.disabled = false;\n    const sharedLinkInputElement = document.getElementById('share-link');\n    sharedLinkInputElement.value = `${location.origin}/my-place?address=${encodeURI(address)}&lat=${coordinates.lat}&lng=${coordinates.lng}`;\n  }\n  locateUserHandler() {\n    if (!navigator.geolocation) {\n      alert(\"Location Feature is not available in your browser - please use a more modern browser\");\n      return;\n    }\n    const modal = new Modal(\"loading-modal-content\", \"Loading location - please wait\");\n    modal.show();\n    navigator.geolocation.getCurrentPosition(async successResult => {\n      const coordinates = {\n        lat: successResult.coords.latitude,\n        lng: successResult.coords.longitude\n      };\n      const address = await getAddressFromCoords(coordinates);\n      modal.hide();\n      this.selectPlace(coordinates, address);\n    }, error => {\n      modal.hide();\n      alert(\"Could not locate your unfortunately. Please enter an address manually!\");\n    });\n  }\n  async findAddressHandler(event) {\n    event.preventDefault();\n    const address = event.target.querySelector(\"input\").value;\n    if (!address || address.trim().length === 0) {\n      alert(\"Invalid address entered - please try again!\");\n      return;\n    }\n    const modal = new Modal(\"loading-modal-content\", \"Loading location - please wait\");\n    modal.show();\n    try {\n      const coordinates = await getCoordsFromAddress(address);\n      this.selectPlace(coordinates, address);\n    } catch (err) {\n      alert(err.message);\n    }\n    modal.hide();\n  }\n}\nconst placeFinder = new PlaceFinder();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDQxLmpzIiwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2hDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNwQkE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUMzQkE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUdBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL215LXBsYWNlLy4vc3JjL1VJL01vZGFsLmpzPzI3MDIiLCJ3ZWJwYWNrOi8vbXktcGxhY2UvLi9zcmMvVUkvTWFwLmpzP2I1NzkiLCJ3ZWJwYWNrOi8vbXktcGxhY2UvLi9zcmMvVXRpbGl0eS9Mb2NhdGlvbi5qcz80MmRlIiwid2VicGFjazovL215LXBsYWNlLy4vc3JjL1NoYXJlUGxhY2UuanM/ZDVhNyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgTW9kYWwge1xuICAgIGNvbnN0cnVjdG9yKGNvbnRlbnRJZCwgZmFsbGJhY2tUZXh0KSB7XG4gICAgICAgIHRoaXMuZmFsbGJhY2tUZXh0ID0gZmFsbGJhY2tUZXh0O1xuICAgICAgICB0aGlzLmNvbnRlbnRUZW1wbGF0ZUVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY29udGVudElkKTtcbiAgICAgICAgdGhpcy5tb2RhbFRlbXBsYXRlRWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbW9kYWwtdGVtcGxhdGUnKTtcbiAgICB9XG4gICAgc2hvdygpIHtcbiAgICAgICAgaWYoJ2NvbnRlbnQnIGluIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RlbXBsYXRlJykpIHtcbiAgICAgICAgICAgIC8vICdjb250ZW50JyBpbiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZW1wbGF0ZScpID0+IHRlbXBsYXRl6rCAIOyCrOyaqSDqsIDriqXtlZzsp4Ag7ZmV7J24IFxuICAgICAgICAgICAgY29uc3QgbW9kYWxFbGVtZW50cyA9IGRvY3VtZW50LmltcG9ydE5vZGUodGhpcy5tb2RhbFRlbXBsYXRlRWwuY29udGVudCwgdHJ1ZSk7XG4gICAgICAgICAgICB0aGlzLm1vZGFsRWxlbWVudCA9IG1vZGFsRWxlbWVudHMucXVlcnlTZWxlY3RvcignLm1vZGFsJyk7XG4gICAgICAgICAgICB0aGlzLmJhY2tkcm9wRWxlbWVudCA9IG1vZGFsRWxlbWVudHMucXVlcnlTZWxlY3RvcignLmJhY2tkcm9wJyk7XG4gICAgICAgICAgICBjb25zdCBjb250ZW50RWxlbWVudCA9IGRvY3VtZW50LmltcG9ydE5vZGUodGhpcy5jb250ZW50VGVtcGxhdGVFbC5jb250ZW50LHRydWUpO1xuXG4gICAgICAgICAgICB0aGlzLm1vZGFsRWxlbWVudC5hcHBlbmRDaGlsZChjb250ZW50RWxlbWVudCk7XG5cbiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KCdhZnRlcmJlZ2luJywgdGhpcy5tb2RhbEVsZW1lbnQpO1xuICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5pbnNlcnRBZGphY2VudEVsZW1lbnQoJ2FmdGVyYmVnaW4nLCB0aGlzLmJhY2tkcm9wRWxlbWVudCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBmYWxsYmFjayBjb2RlXG4gICAgICAgICAgICBhbGVydCh0aGlzLmZhbGxiYWNrVGV4dCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBoaWRlKCkge1xuICAgICAgICBpZih0aGlzLm1vZGFsRWxlbWVudCkge1xuICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZCh0aGlzLm1vZGFsRWxlbWVudCk7XG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHRoaXMuYmFja2Ryb3BFbGVtZW50KTtcbiAgICAgICAgICAgIHRoaXMubW9kYWxFbGVtZW50ID0gbnVsbDtcbiAgICAgICAgICAgIHRoaXMuYmFja2Ryb3BFbGVtZW50ID0gbnVsbDsgXG4gICAgICAgIH1cbiAgICB9XG59IiwiZXhwb3J0IGNsYXNzIE1hcCB7XG4gICAgY29uc3RydWN0b3IoY29vcmRzKSB7XG4gICAgICAgIHRoaXMucmVuZGVyKGNvb3Jkcyk7XG4gICAgfVxuXG4gICAgcmVuZGVyKGNvb3JkaW5hdGVzKSB7XG4gICAgICAgIGlmKCFnb29nbGUpIHtcbiAgICAgICAgICAgIGFsZXJ0KCdDb3VsZCBub3QgbG9hZCBtYXBzIGxpYnJhcnkgLSBwbGVhc2UgdHJ5IGFnYWluIGxhdGVyIScpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG1hcCA9IG5ldyBnb29nbGUubWFwcy5NYXAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21hcCcpLCB7XG4gICAgICAgICAgICBjZW50ZXI6IGNvb3JkaW5hdGVzLFxuICAgICAgICAgICAgem9vbTogMTZcbiAgICAgICAgfSk7XG5cbiAgICAgICAgbmV3IGdvb2dsZS5tYXBzLk1hcmtlcih7XG4gICAgICAgICAgICBwb3NpdGlvbjogY29vcmRpbmF0ZXMsXG4gICAgICAgICAgICBtYXA6IG1hcFxuICAgICAgICB9KTtcbiAgICB9XG59IiwiY29uc3QgR09PR0xFX0FQSV9LRVkgPSAnJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEFkZHJlc3NGcm9tQ29vcmRzKGNvb3Jkcykge1xuICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9tYXBzLmdvb2dsZWFwaXMuY29tL21hcHMvYXBpL2dlb2NvZGUvanNvbj9sYXRsbmc9JHtjb29yZHMubGF0fSwke2Nvb3Jkcy5sbmd9JmtleT0ke0dPT0dMRV9BUElfS0VZfWApXG4gICBpZighcmVzcG9uc2Uub2spe1xuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGZldGNoIGFkZHJlc3MuIFBsZWFzZSB0cnkgYWdhaW4hJyk7XG4gfVxuIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gaWYoZGF0YS5lcnJvcl9tZXNzYWdlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGRhdGEuZXJyb3JfbWVzc2FnZSk7XG4gfVxuIGNvbnN0IGFkZHJlc3MgPSBkYXRhLnJlc3VsdHNbMF0uZm9ybWF0dGVkX2FkZHJlc3M7XG4gcmV0dXJuIGFkZHJlc3M7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRDb29yZHNGcm9tQWRkcmVzcyhhZGRyZXNzKSB7XG4gY29uc3QgdXJsQWRkcmVzcyA9IGVuY29kZVVSSShhZGRyZXNzKTtcbiBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGBodHRwczovL21hcHMuZ29vZ2xlYXBpcy5jb20vbWFwcy9hcGkvZ2VvY29kZS9qc29uP2FkZHJlc3M9JHt1cmxBZGRyZXNzfSZrZXk9JHtHT09HTEVfQVBJX0tFWX1gKTtcbiBpZighcmVzcG9uc2Uub2spe1xuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGZldGNoIGNvb3JkaW5hdGVzLiBQbGVhc2UgdHJ5IGFnYWluIScpO1xuIH1cbiBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuIGlmKGRhdGEuZXJyb3JfbWVzc2FnZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihkYXRhLmVycm9yX21lc3NhZ2UpO1xuIH1cbiBjb25zdCBjb29yZGluYXRlcyA9IGRhdGEucmVzdWx0c1swXS5nZW9tZXRyeS5sb2NhdGlvbjtcbiByZXR1cm4gY29vcmRpbmF0ZXM7XG59IiwiaW1wb3J0IHsgTW9kYWwgfSBmcm9tIFwiLi9VSS9Nb2RhbFwiO1xuaW1wb3J0IHsgTWFwIH0gZnJvbSBcIi4vVUkvTWFwXCI7XG5pbXBvcnQgeyBnZXRDb29yZHNGcm9tQWRkcmVzcywgZ2V0QWRkcmVzc0Zyb21Db29yZHMgfSBmcm9tIFwiLi9VdGlsaXR5L0xvY2F0aW9uXCI7XG5cbmNsYXNzIFBsYWNlRmluZGVyIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgY29uc3QgYWRkcmVzc0Zvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiZm9ybVwiKTtcbiAgICBjb25zdCBsb2NhdGVVc2VyQnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsb2NhdGUtYnRuXCIpO1xuICAgIHRoaXMuc2hhcmVCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2hhcmUtYnRuJyk7XG5cbiAgICBsb2NhdGVVc2VyQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLmxvY2F0ZVVzZXJIYW5kbGVyLmJpbmQodGhpcykpO1xuICAgIHRoaXMuc2hhcmVCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLnNoYXJlUGxhY2VIYW5kbGVyKVxuICAgIGFkZHJlc3NGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgdGhpcy5maW5kQWRkcmVzc0hhbmRsZXIuYmluZCh0aGlzKSk7XG4gIH1cblxuICBzaGFyZVBsYWNlSGFuZGxlcigpIHtcbiAgICBjb25zdCBzaGFyZWRMaW5rSW5wdXRFbGVtZW50ID0gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzaGFyZS1saW5rJyk7XG4gICAgaWYoIW5hdmlnYXRvci5jbGlwYm9hcmQpe1xuICAgICAgc2hhcmVkTGlua0lucHV0RWxlbWVudC5zZWxlY3QoKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbmF2aWdhdG9yLmNsaXBib2FyZC53cml0ZVRleHQoc2hhcmVkTGlua0lucHV0RWxlbWVudC52YWx1ZSlcbiAgICAudGhlbigoKSA9PiB7XG4gICAgICBhbGVydCgnQ29waWVkIGludG8gY2xpcGJvYXJkIScpO1xuICAgIH0pXG4gICAgLmNhdGNoKGVyciA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgc2hhcmVkTGlua0lucHV0RWxlbWVudC5zZWxlY3QoKTtcbiAgICB9KTtcbiAgfVxuXG4gIHNlbGVjdFBsYWNlKGNvb3JkaW5hdGVzLCBhZGRyZXNzKSB7XG4gICAgaWYgKHRoaXMubWFwKSB7XG4gICAgICB0aGlzLm1hcC5yZW5kZXIoY29vcmRpbmF0ZXMpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLm1hcCA9IG5ldyBNYXAoY29vcmRpbmF0ZXMpO1xuICAgIH1cbiAgICB0aGlzLnNoYXJlQnRuLmRpc2FibGVkID0gZmFsc2U7XG4gICAgY29uc3Qgc2hhcmVkTGlua0lucHV0RWxlbWVudCA9ICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2hhcmUtbGluaycpO1xuICAgIHNoYXJlZExpbmtJbnB1dEVsZW1lbnQudmFsdWUgPSBgJHtsb2NhdGlvbi5vcmlnaW59L215LXBsYWNlP2FkZHJlc3M9JHtlbmNvZGVVUkkoYWRkcmVzcyl9JmxhdD0ke2Nvb3JkaW5hdGVzLmxhdH0mbG5nPSR7Y29vcmRpbmF0ZXMubG5nfWA7XG4gIH1cblxuICAgbG9jYXRlVXNlckhhbmRsZXIoKSB7XG4gICAgaWYgKCFuYXZpZ2F0b3IuZ2VvbG9jYXRpb24pIHtcbiAgICAgIGFsZXJ0KFxuICAgICAgICBcIkxvY2F0aW9uIEZlYXR1cmUgaXMgbm90IGF2YWlsYWJsZSBpbiB5b3VyIGJyb3dzZXIgLSBwbGVhc2UgdXNlIGEgbW9yZSBtb2Rlcm4gYnJvd3NlclwiXG4gICAgICApO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBtb2RhbCA9IG5ldyBNb2RhbChcbiAgICAgIFwibG9hZGluZy1tb2RhbC1jb250ZW50XCIsXG4gICAgICBcIkxvYWRpbmcgbG9jYXRpb24gLSBwbGVhc2Ugd2FpdFwiXG4gICAgKTtcbiAgICBtb2RhbC5zaG93KCk7XG4gICAgbmF2aWdhdG9yLmdlb2xvY2F0aW9uLmdldEN1cnJlbnRQb3NpdGlvbihcbiAgICAgIGFzeW5jIHN1Y2Nlc3NSZXN1bHQgPT4ge1xuICAgICAgICBjb25zdCBjb29yZGluYXRlcyA9IHtcbiAgICAgICAgICBsYXQ6IHN1Y2Nlc3NSZXN1bHQuY29vcmRzLmxhdGl0dWRlLFxuICAgICAgICAgIGxuZzogc3VjY2Vzc1Jlc3VsdC5jb29yZHMubG9uZ2l0dWRlLFxuICAgICAgICB9O1xuICAgICAgICBjb25zdCBhZGRyZXNzID0gYXdhaXQgZ2V0QWRkcmVzc0Zyb21Db29yZHMoY29vcmRpbmF0ZXMpO1xuICAgICAgICBtb2RhbC5oaWRlKCk7XG4gICAgICAgIHRoaXMuc2VsZWN0UGxhY2UoY29vcmRpbmF0ZXMsIGFkZHJlc3MpO1xuICAgICAgfSxcbiAgICAgIGVycm9yID0+IHtcbiAgICAgICAgbW9kYWwuaGlkZSgpO1xuICAgICAgICBhbGVydChcbiAgICAgICAgICBcIkNvdWxkIG5vdCBsb2NhdGUgeW91ciB1bmZvcnR1bmF0ZWx5LiBQbGVhc2UgZW50ZXIgYW4gYWRkcmVzcyBtYW51YWxseSFcIlxuICAgICAgICApO1xuICAgICAgfVxuICAgICk7XG4gIH1cblxuICBhc3luYyBmaW5kQWRkcmVzc0hhbmRsZXIoZXZlbnQpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0IGFkZHJlc3MgPSBldmVudC50YXJnZXQucXVlcnlTZWxlY3RvcihcImlucHV0XCIpLnZhbHVlO1xuICAgIGlmICghYWRkcmVzcyB8fCBhZGRyZXNzLnRyaW0oKS5sZW5ndGggPT09IDApIHtcbiAgICAgIGFsZXJ0KFwiSW52YWxpZCBhZGRyZXNzIGVudGVyZWQgLSBwbGVhc2UgdHJ5IGFnYWluIVwiKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgbW9kYWwgPSBuZXcgTW9kYWwoXG4gICAgICBcImxvYWRpbmctbW9kYWwtY29udGVudFwiLFxuICAgICAgXCJMb2FkaW5nIGxvY2F0aW9uIC0gcGxlYXNlIHdhaXRcIlxuICAgICk7XG4gICAgbW9kYWwuc2hvdygpO1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBjb29yZGluYXRlcyA9IGF3YWl0IGdldENvb3Jkc0Zyb21BZGRyZXNzKGFkZHJlc3MpO1xuICAgICAgdGhpcy5zZWxlY3RQbGFjZShjb29yZGluYXRlcywgYWRkcmVzcyk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBhbGVydChlcnIubWVzc2FnZSk7XG4gICAgfVxuICAgIG1vZGFsLmhpZGUoKTtcbiAgfVxufVxuXG5jb25zdCBwbGFjZUZpbmRlciA9IG5ldyBQbGFjZUZpbmRlcigpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///441\n")}},__webpack_exports__={};__webpack_modules__[441]()})();